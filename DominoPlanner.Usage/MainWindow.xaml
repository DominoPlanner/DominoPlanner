<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DominoPlanner.Usage"
        xmlns:core="clr-namespace:DominoPlanner.Core;assembly=DominoPlanner.Core"
        xmlns:View="clr-namespace:DominoPlanner.Usage.UserControls.View"
        xmlns:vm="clr-namespace:DominoPlanner.Usage.UserControls.ViewModel"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
        xmlns:i18n="clr-namespace:DominoPlanner.Usage"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450" Width="800" Height="450"
        x:Class="DominoPlanner.Usage.MainWindow" Closing="Window_Closing" x:CompileBindings="True" x:DataType="local:MainWindowViewModel"
        Title="DominoPlanner" Icon="/Icons/DominoCalculator.ico">

    <NativeMenu.Menu>
        <NativeMenu>
            <NativeMenuItem Header="{local:Gettext New}">
                <NativeMenuItem.Menu>
                    <NativeMenu>
                        <NativeMenuItem Header="{local:Gettext New Project}" Command="{Binding NewProject}" Gesture="Alt+N"/>
                        <NativeMenuItem Header="{local:Gettext New Field/Structure}" Command="{Binding NewFieldStruct}" Gesture="Ctrl+N"/>
                    </NativeMenu>
                </NativeMenuItem.Menu>
            </NativeMenuItem>

            <NativeMenuItem Header="{local:Gettext Add Existing}">
                <NativeMenuItem.Menu>
                    <NativeMenu>
                        <NativeMenuItem Header="{local:Gettext Add existing project}" Command="{Binding AddExistingProject}"/>
                        <NativeMenuItem Header="{local:Gettext Add existing Field/Structure}" Command="{Binding AddExistingItem}"/>
                    </NativeMenu>
                </NativeMenuItem.Menu>
            </NativeMenuItem>

            <NativeMenuItem Header="{local:Gettext Save}">
                <NativeMenuItem.Menu>
                    <NativeMenu>
                        <NativeMenuItem Header="{local:Gettext Save}" Command="{Binding SaveCurrentOpen}" Gesture="Ctrl+S"/>
                        <NativeMenuItem Header="{local:Gettext Save all}" Command="{Binding SaveAll}" Gesture="Ctrl+Alt+S"/>
                    </NativeMenu>
                </NativeMenuItem.Menu>
            </NativeMenuItem>

            <NativeMenuItem Header="{local:Gettext Undo Redo}">
                <NativeMenuItem.Menu>
                    <NativeMenu>
                        <NativeMenuItem Header="{local:Gettext Undo}" Command="{Binding SelectedTab.Content.UndoComm}" Gesture="Ctrl+Z"/>
                        <NativeMenuItem Header="{local:Gettext Redo}" Command="{Binding SelectedTab.Content.RedoComm}" Gesture="Ctrl+Shift+Z"/>
                    </NativeMenu>
                </NativeMenuItem.Menu>
            </NativeMenuItem>
        </NativeMenu>

        <NativeMenuItem Header="{local:Gettext Settings}">
            <NativeMenuItem.Menu>
                <NativeMenu>
                    <NativeMenuItem Header="{local:Gettext Set Defaults}" Command="{Binding MenuSetStandard}" Gesture="Ctrl+R"/>
                </NativeMenu>
            </NativeMenuItem.Menu>
        </NativeMenuItem>

        <NativeMenuItem Header="{local:Gettext Editing}">
            <NativeMenuItem.Menu>
                <NativeMenu x:CompileBindings="False">
                    <NativeMenuItem Header="{local:Gettext Copy}" Command="{Binding SelectedTab.Content.CopyCom}" Gesture="Ctrl+C"/>
                    <NativeMenuItem Header="{local:Gettext Paste}" Command="{Binding SelectedTab.Content.PasteCom}" Gesture="Ctrl+V"/>

                    <NativeMenuItem Header="{local:Gettext Add}">
                        <NativeMenuItem.Menu>
                            <NativeMenu>
                                <NativeMenuItem Header="{local:Gettext Add row above}" Command="{Binding SelectedTab.Content.AddRowAbove}" Gesture="Alt+W"/>
                                <NativeMenuItem Header="{local:Gettext Add row below}" Command="{Binding SelectedTab.Content.AddRowBelow}" Gesture="Alt+S"/>
                                <NativeMenuItem Header="{local:Gettext Add column right}" Command="{Binding SelectedTab.Content.AddColumnRight}" Gesture="Alt+D"/>
                                <NativeMenuItem Header="{local:Gettext Add column left}" Command="{Binding SelectedTab.Content.AddColumnLeft}" Gesture="Alt+A" />
                            </NativeMenu>
                        </NativeMenuItem.Menu>
                    </NativeMenuItem>

                    <NativeMenuItem Header="{local:Gettext Remove}">
                        <NativeMenuItem.Menu>
                            <NativeMenu>
                                <NativeMenuItem Header="{local:Gettext Remove selected rows}" Command="{Binding SelectedTab.Content.RemoveRows}" Gesture="Alt+R"/>
                                <NativeMenuItem Header="{local:Gettext Remove selected columns}" Command="{Binding SelectedTab.Content.RemoveColumns}" Gesture="Alt+C"/>
                            </NativeMenu>
                        </NativeMenuItem.Menu>
                    </NativeMenuItem>

                </NativeMenu>
            </NativeMenuItem.Menu>
        </NativeMenuItem>
    </NativeMenu.Menu>
    <Window.DataTemplates>
        <DataTemplate DataType="{x:Type vm:EditProjectVM}">
            <View:EditProject HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" DataContext="{Binding Self}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:DominoProviderVM}">
            <View:BasicSettings HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" DataContext="{Binding Self}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:ColorListControlVM}">
            <View:ColorListControl HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" DataContext="{Binding Self}"/>
        </DataTemplate>
    </Window.DataTemplates>
    <Window.Resources>
        <local:PathToImageConverter x:Key="PathToImageConverter"/>
        <local:FilenameToImageConverter x:Key="FilenameToThumbnailConverter"/>
    </Window.Resources>
    <Window.KeyBindings>
        <KeyBinding Gesture="Ctrl+N" Command="{Binding NewFieldStruct}"/>
        <KeyBinding Gesture="Alt+N" Command="{Binding NewProject}"/>
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveCurrentOpen}"/>
        <KeyBinding Gesture="Ctrl+Alt+S" Command="{Binding SaveAll}"/>
        <KeyBinding Gesture="Ctrl+Z" Command="{Binding SelectedTab.Content.UndoComm}"/>
        <KeyBinding Gesture="Ctrl+Y" Command="{Binding SelectedTab.Content.RedoComm}"/>
        <KeyBinding Gesture="Ctrl+R" Command="{Binding MenuSetStandard}"/>
        <KeyBinding Gesture="Ctrl+C" Command="{Binding SelectedTab.Content.CopyCom}" x:CompileBindings="False"/>
        <KeyBinding Gesture="Ctrl+V" Command="{Binding SelectedTab.Content.PasteCom}" x:CompileBindings="False"/>
        <KeyBinding Gesture="Ctrl+A" Command="{Binding SelectedTab.Content.SelectAllCom}" x:CompileBindings="False"/>
        <KeyBinding Gesture="Alt+W" Command="{Binding SelectedTab.Content.AddRowAbove}" x:CompileBindings="False"/>
        <KeyBinding Gesture="Alt+A" Command="{Binding SelectedTab.Content.AddColumnLeft}" x:CompileBindings="False"/>
        <KeyBinding Gesture="Alt+S" Command="{Binding SelectedTab.Content.AddRowBelow}" x:CompileBindings="False"/>
        <KeyBinding Gesture="Alt+D" Command="{Binding SelectedTab.Content.AddColumnRight}" x:CompileBindings="False"/>
        <KeyBinding Gesture="Alt+R" Command="{Binding SelectedTab.Content.RemoveRows}" x:CompileBindings="False"/>
        <KeyBinding Gesture="Alt+C" Command="{Binding SelectedTab.Content.RemoveColumns}" x:CompileBindings="False"/>
    </Window.KeyBindings>
    <Grid Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="25" Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" IsVisible="{Binding ShowWindowMenu}" Height="25" VerticalAlignment="Top" Margin="0,0,0.286,0" Background="#7FF0F0F0" >
            <MenuItem>
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/new.ico" Margin="2"/>
                        <TextBlock Margin="5, 0, 0, 0" VerticalAlignment="Center" Text="{local:Gettext New}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
                <MenuItem Header="{local:Gettext New Project}" Command="{Binding NewProject}" InputGesture="Alt+N">
                    <MenuItem.Icon>
                        <Image Source="/Icons/new.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{local:Gettext New Field/Structure}" Command="{Binding NewFieldStruct}" InputGesture="Ctrl+N" >
                    <MenuItem.Icon>
                        <Image Source="/Icons/new.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/add.ico" Margin="2"/>
                        <TextBlock Margin="5, 0, 0, 0" VerticalAlignment="Center" Text="{local:Gettext Add}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
                <MenuItem Header="{local:Gettext Add existing project}" Command="{Binding AddExistingProject}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/add.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{local:Gettext Add existing Field/Structure}" Command="{Binding AddExistingItem}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/add.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem >
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/Save.ico" Margin="2"/>
                        <TextBlock Margin="5, 0, 0, 0" VerticalAlignment="Center" Text="{local:Gettext Save}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
                <MenuItem Header="{local:Gettext Save}" Command="{Binding SaveCurrentOpen}" InputGesture="Ctrl+S">
                    <MenuItem.Icon>
                        <Image Source="/Icons/Save.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{local:Gettext Save all}" Command="{Binding SaveAll}" InputGesture="Ctrl+Alt+S" >
                    <MenuItem.Icon>
                        <Image Source="/Icons/Save_All.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Command="{Binding SelectedTab.Content.UndoComm}" InputGesture="Ctrl+Z" >
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/edit_undo.ico" Margin="2"/>
                        <TextBlock Margin="5, 0, 0, 0" VerticalAlignment="Center" Text="{local:Gettext Undo}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="{Binding SelectedTab.Content.RedoComm}" >
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/edit_redo.ico" Margin="2"/>
                        <TextBlock Margin="5, 0, 0, 0" VerticalAlignment="Center" Text="{local:Gettext Redo}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="{Binding MenuSetStandard}" InputGesture="Ctrl+R" >
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/properties.ico" Margin="2"/>
                        <TextBlock Margin="5, 0, 0, 0" VerticalAlignment="Center" Text="{local:Gettext Set Defaults}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Name="EditingMenuItem" x:CompileBindings="False">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/draw_freehand.ico" Margin="2"/>
                        <TextBlock Margin="5, 0, 0, 0" VerticalAlignment="Center" Text="{local:Gettext Editing}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
                <i:Interaction.Behaviors>
                    <ia:DataTriggerBehavior Binding="{Binding SelectedTab}" Value="{x:Null}">
                        <ia:ChangePropertyAction TargetObject="{Binding #EditingMenuItem}" PropertyName="IsVisible" Value="false"/>
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding SelectedTab.Content.tabType}" Value="{x:Static vm:TabItemType.EditProject}">
                        <ia:ChangePropertyAction TargetObject="{Binding #EditingMenuItem}" PropertyName="IsVisible" Value="true"/>
                    </ia:DataTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuItem Header="{local:Gettext Copy}" Command="{Binding SelectedTab.Content.CopyCom}" InputGesture="Ctrl+C">
                    <MenuItem.Icon>
                        <Image Source="/Icons/Copy.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{local:Gettext Paste}" Command="{Binding SelectedTab.Content.PasteCom}" InputGesture="Ctrl+V">
                    <MenuItem.Icon>
                        <Image Source="/Icons/Paste.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <!--MenuItem Header="{local:Gettext Mirror}">
                    <MenuItem Header="{local:Gettext Flip Horizontally}" Command="{Binding SelectedTab.Content.FlipHorizontallyCom}">
                        <MenuItem.Icon>
                            <Image Source="Icons/flip hori.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{local:Gettext Flip Vertically}" Command="{Binding SelectedTab.Content.FlipVerticallyCom}">
                        <MenuItem.Icon>
                            <Image Source="Icons/flip vertical.ico"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </-->
                <MenuItem Header="{local:Gettext Add}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/add.ico"/>
                    </MenuItem.Icon>
                    <MenuItem Header="{local:Gettext Add row above}" ToolTip.Tip="{local:Gettext Add Row above selected stone}" Command="{Binding SelectedTab.Content.AddRowAbove}" InputGesture="Alt+W"/>
                    <MenuItem Header="{local:Gettext Add row below}" ToolTip.Tip="{local:Gettext Add Row below selected stone}" Command="{Binding SelectedTab.Content.AddRowBelow}" InputGesture="Alt+S"/>
                    <MenuItem Header="{local:Gettext Add column right}" ToolTip.Tip="{local:Gettext Add column at the right from the selected stone}" Command="{Binding SelectedTab.Content.AddColumnRight}" InputGesture="Alt+D"/>
                    <MenuItem Header="{local:Gettext Add column left}" ToolTip.Tip="{local:Gettext Add column at the left from the selected stone}" Command="{Binding SelectedTab.Content.AddColumnLeft}" InputGesture="Alt+A" />
                </MenuItem>
                <MenuItem Header="{local:Gettext Remove}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/remove.ico"/>
                    </MenuItem.Icon>
                    <MenuItem Header="{local:Gettext Remove selected rows}" Command="{Binding SelectedTab.Content.RemoveRows}" InputGesture="Alt+R"/>
                    <MenuItem Header="{local:Gettext Remove selected columns}" Command="{Binding SelectedTab.Content.RemoveColumns}" InputGesture="Alt+C"/>
                </MenuItem>
            </MenuItem>
            <MenuItem x:CompileBindings="False" Name="Workspace" Items="{Binding Source={x:Static core:Workspace.Instance}, Path=openedFiles}">
                <MenuItem.Styles>
                    <Style Selector="#Workspace > MenuItem">
                        <Setter Property="Icon" Value="{Binding Item1, Converter={StaticResource PathToImageConverter}}"/>
                        <Setter Property="Header" Value="{Binding Item1}"/>
                        <Setter Property="Command" Value="{Binding #Workspace.DataContext.FileListClickCommand}"/>
                        <Setter Property="CommandParameter" Value="{Binding Item1}"/>
                    </Style>
                </MenuItem.Styles>
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/open.ico" Margin="2"/>
                        <TextBlock Margin="5, 0, 0, 0" VerticalAlignment="Center" Text="{local:Gettext Workspace}"></TextBlock>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
        </Menu>
        <Border Grid.Row="1" Margin="0,0,0.286,0.428" BorderBrush="Red" BorderThickness="0" Grid.RowSpan="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" MinWidth="100"/>
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="720*"/>
                </Grid.ColumnDefinitions>
                <DockPanel LastChildFill="True">
                <Button DockPanel.Dock="Bottom" Command="{Binding OpenAbout}" Content="{local:Gettext About DominoPlanner}"/>
                <TreeView Grid.Column="0" Margin="0,0,0,0" Items="{Binding Projects}" Background="#34FFFFFF" SelectedItem="{Binding SelectedProject}">

                    <TreeView.Styles>
                        <Style Selector="TreeViewItem" x:CompileBindings="False">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                        </Style>
                    </TreeView.Styles>
                    <TreeView.DataTemplates>
                        <TreeDataTemplate DataType="{x:Type vm:AssemblyNodeVM}" ItemsSource="{Binding Children}">
                            <ContentControl Height="20">
                                <i:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior EventName="DoubleTapped">
                                        <ia:InvokeCommandAction Command="{Binding MouseClickCommand}"/>
                                    </ia:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Grid ToolTip.Tip="{Binding AbsolutePath}" ColumnDefinitions="20,*" ContextMenu="{Binding ContextMenu}">
                                    <Image Grid.Column="0" Source="/Icons/folder_txt.ico"  Width="18" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    <Image Grid.Column="0" Margin="10, 10, 0, 0" Width="8" Height="8" Source="/Icons/remove.ico" IsVisible="{Binding BrokenReference}"></Image>
                                    <TextBlock Grid.Column="1" Margin="5, 0, 0, 0"  Text="{Binding Name}" FontSize="14" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    </TextBlock>
                                    <!--<Grid.ContextMenu>
                    <ContextMenu>
                      <MenuItem Header="{local:Gettext Open Folder}" Command="{Binding OpenFolderCommand}">
                        <MenuItem.Icon>
                          <Image Source="/Icons/folder_tar.ico"/>
                        </MenuItem.Icon>
                      </MenuItem>
                    </ContextMenu>
                  </Grid.ContextMenu>-->
                                </Grid>
                            </ContentControl>
                        </TreeDataTemplate>
                        <TreeDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type vm:DocumentNodeVM}" x:CompileBindings="False">
                            <ContentControl Height="20">
                                <i:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior EventName="DoubleTapped">
                                        <ia:InvokeCommandAction Command="{Binding MouseClickCommand}"/>
                                    </ia:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Grid ToolTip.Tip="{Binding AbsolutePath}" ContextMenu="{Binding ContextMenu}" ColumnDefinitions="20,*">
                                    <Image Grid.Column="0" Source="{Binding ImagePath, Converter={StaticResource FilenameToThumbnailConverter}}"  Width="18" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    <Image Grid.Column="0" Margin="10, 10, 0, 0" Width="8" Height="8" Source="/Icons/remove.ico" IsVisible="{Binding BrokenReference}"></Image>
                                    <TextBlock Grid.Column="1" Margin="5, 0, 0, 0"  Text="{Binding Name}" FontSize="14" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    </TextBlock>
                                </Grid>
                            </ContentControl>
                        </TreeDataTemplate>
                    </TreeView.DataTemplates>
                </TreeView>
                </DockPanel>
                <GridSplitter HorizontalAlignment="Center" Margin="0" Width="3" Background="#FFDDDDDD" Grid.Column="1"/>
                <TabControl Grid.Column="2" Items="{Binding Tabs}" SelectedItem="{Binding SelectedTab}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="#33FFFFFF" Margin="0,0,5,0">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" ToolTip.Tip="{Binding Path}" >
                                <Image  Source="{Binding Picture, Converter={StaticResource FilenameToThumbnailConverter}}" VerticalAlignment="Center" MaxHeight="25" MaxWidth="50"/>
                                <TextBlock Margin="5, 0" Text="{Binding Header}" VerticalAlignment="Center"/>
                                <Button  Command="{Binding Close}" BorderBrush="{x:Null}" VerticalAlignment="Center" VerticalContentAlignment="Center" Height="24" Width="24" Background="Transparent">
                                    <Image Source="{StaticResource closeDrawingImage}"/>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <!-- this is the body of the TabItem template-->
                        <DataTemplate DataType="{x:Type vm:TabItem}">
                            <ContentControl Margin="1,1,1,1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Content="{Binding Content}"/>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Grid>
        </Border>
    </Grid>
</Window>
