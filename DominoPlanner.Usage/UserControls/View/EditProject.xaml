<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:DominoPlanner.Usage.UserControls.View"
             xmlns:vm="clr-namespace:DominoPlanner.Usage.UserControls.ViewModel"
             xmlns:parent="clr-namespace:DominoPlanner.Usage"
             xmlns:cp="clr-namespace:ThemeEditor.Controls.ColorPicker;assembly=ThemeEditor.Controls.ColorPicker"
             
             mc:Ignorable="d"
             x:Class="DominoPlanner.Usage.UserControls.View.EditProject"
            d:DesignHeight="600" d:DesignWidth="1000" Cursor="{Binding UICursor}"
           HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
ScrollViewer.VerticalScrollBarVisibility="Disabled">
  <!--SizeChanged="UserControl_SizeChanged"-->
  <UserControl.Resources>
    <parent:ColorToBrushConverter x:Key="ColorToBrushConverter" />
    <parent:AmountToColorConverter x:Key="AmountToColorConverter"/>
    <parent:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
    <parent:BoolInverterConverter x:Key="BoolInverterConverter"/>
    <local:ImageConverter x:Key="ImageConverter"/>
    <vm:SelectionModeColorConverter x:Key="SelectionModeColorConverter"/>
  </UserControl.Resources>
  <UserControl.DataTemplates>
    
    <DataTemplate DataType="{x:Type vm:SelectionToolVM}">
      <StackPanel Orientation="Horizontal">
        <TextBlock VerticalAlignment="Center" Margin="5, 0, 2, 0">Selection Mode:</TextBlock>
        <RadioButton Classes="ToolButton" Margin="0, 0" GroupName="SelectMode" ToolTip.Tip="Add to selection"
                     IsChecked="{Binding CurrentSelectionDomain.SelectionMode, 
                    Converter={StaticResource EnumBooleanConverter}, 
                    ConverterParameter={x:Static vm:SelectionMode.Add} }">
          +
        </RadioButton>
        <RadioButton Classes="ToolButton" Margin="1, 0" GroupName="SelectMode" ToolTip.Tip="Left mouse button: add, right mouse button: remove" IsChecked="{Binding CurrentSelectionDomain.SelectionMode, 
                    Converter={StaticResource EnumBooleanConverter}, 
                    ConverterParameter={x:Static vm:SelectionMode.Neutral} }">
          ±
        </RadioButton>
        <RadioButton Classes="ToolButton" Margin="1, 0" GroupName="SelectMode" ToolTip.Tip="Remove from selection" IsChecked="{Binding CurrentSelectionDomain.SelectionMode, 
                    Converter={StaticResource EnumBooleanConverter}, 
                    ConverterParameter={x:Static vm:SelectionMode.Remove} }">
          -
        </RadioButton>
        <TextBlock VerticalAlignment="Center" Margin="5, 0, 2, 0">Selection Shape:</TextBlock>

        <ListBox Background="Transparent" Margin="0, -2, 0, 0"
             BorderBrush="Transparent" Padding="0"
             BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled"
             VerticalAlignment="Stretch" SelectedItem="{Binding CurrentSelectionDomain, Mode=TwoWay}"
                 Items="{Binding SelectionTools}" Classes="ToolButton">
          <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
          </ListBox.ItemsPanel>

          <ListBox.ItemTemplate>
            <DataTemplate >
                <Image Classes="ToolImage" Source="{Binding Img}" ToolTip.Tip="{Binding Name}"/>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
        <ContentControl Content="{Binding CurrentSelectionDomain}" Width="180" Margin="5, 0"></ContentControl>
        
        <Button Margin="30, 0, 1, 0" ToolTip.Tip="Undo last selection operation" Command="{Binding UndoSelectionOperation}">
          <Image Source="{StaticResource undoDrawingImage}" Classes="ToolImage"/>
        </Button>
        <Button Margin="1, 0" ToolTip.Tip="Redo selection operation" Command="{Binding RedoSelectionOperation}">
          <Image Source="{StaticResource redoDrawingImage}" Classes="ToolImage"/>
        </Button>
        <Button Margin="30, 0, 1, 0" ToolTip.Tip="Invert selection" Command="{Binding InvertSelection}">
          <Image Source="{StaticResource invert_selectionDrawingImage}" Classes="ToolImage"/>
        </Button>
        <Button Margin="30, 0, 1, 0" ToolTip.Tip="Clear selection" Command="{Binding DataContext.ClearSelection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}">
          <Image Source="{StaticResource closeDrawingImage}" Classes="ToolImage"/>
        </Button>
      </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:FillBucketDomain}">
      <CheckBox VerticalAlignment="Center" IsChecked="{Binding IncludeDiagonals}">Include diagonals</CheckBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:SelectionDomain}">
      <StackPanel Orientation="Horizontal">
        <TextBlock VerticalAlignment="Center" Margin="5, 0, 2, 0">Boundary treatment:</TextBlock>
        <RadioButton Classes="ToolButton" Margin="0, 0" GroupName="Boundary" ToolTip.Tip="Include dominoes on selection boundary" IsChecked="{Binding IncludeBoundary}">
          <Image Source="{StaticResource include_borderDrawingImage}" Classes="ToolImage"/>
        </RadioButton>
        <RadioButton Classes="ToolButton" Margin="1, 0" GroupName="Boundary" ToolTip.Tip="Exclude dominoes on selection boundary" IsChecked="{Binding IncludeBoundary, Converter={StaticResource BoolInverterConverter }}">
          <Image Source="{StaticResource exclude_borderDrawingImage}" Classes="ToolImage"/>
        </RadioButton>
      </StackPanel>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:DisplaySettingsToolVM}">
      <StackPanel Orientation="Horizontal">
        <TextBlock VerticalAlignment="Center" Margin="10, 0, 2, 0">Background Color:</TextBlock>
        <parent:PopupColorPicker Width="50" VerticalAlignment="Center" Margin="0, 0, 5, 0" Color="{Binding BackgroundColor , Mode=TwoWay}"/>
        <Border BorderBrush="Gray" BorderThickness="0, 0, 1, 0" Margin="0"></Border>

        <CheckBox Content="Hide spaces" Margin="5, 0, 5, 0" VerticalAlignment="Center" IsVisible="{Binding Expandable}" IsChecked="{Binding Expanded}"/>
        <Border BorderBrush="Gray" BorderThickness="0, 0, 1, 0" Margin="0" IsVisible="{Binding Expandable}"></Border>

        <TextBlock VerticalAlignment="Center" Margin="5, 0, 2, 0">Border Color:</TextBlock>
        <parent:PopupColorPicker Width="50" VerticalAlignment="Center" Margin="2, 0, 5, 0" Color="{Binding BorderColor, Mode=TwoWay}"/>
        <Border BorderBrush="Gray" BorderThickness="0, 0, 1, 0" Margin="0"></Border>
        <TextBlock VerticalAlignment="Center" Margin="5, 0, 2, 0">Border Size:</TextBlock>

        <Slider Margin="5, 0, 0, 0" Width="50" Minimum="0" Maximum="5" Value="{Binding BorderSize}"></Slider>
        <Border BorderBrush="Gray" BorderThickness="0, 0, 1, 0" Margin="0"></Border>

        <TextBlock VerticalAlignment="Center" Margin="5, 0, 2, 0">Image overlay transparency:</TextBlock>
        <Slider Margin="5, 0, 0, 0" Width="50" Value="{Binding ImageOpacity}" Minimum="0" Maximum="1"></Slider>
        <RadioButton Classes="ToolButton" Margin="0, 0" GroupName="ImagePosition" ToolTip.Tip="Display image below dominoes" IsChecked="{Binding Above, Converter={StaticResource BoolInverterConverter}}">
          <Image Source="{StaticResource stack_image_belowDrawingImage}" Classes="ToolImage"/>
        </RadioButton>
        <RadioButton Classes="ToolButton" Margin="1, 0" GroupName="ImagePosition" ToolTip.Tip="Display image above dominoes" IsChecked="{Binding Above}">
          <Image Source="{StaticResource stack_image_aboveDrawingImage}" Classes="ToolImage"/>
        </RadioButton>
        <Border BorderBrush="Gray" BorderThickness="0, 0, 1, 0" Margin="5, 0, 0, 0"></Border>
        <TextBlock VerticalAlignment="Center" Margin="5, 0, 2, 0">Open Image:</TextBlock>
        <Button Margin="1, 0"  ToolTip.Tip="Open image" Command="{Binding ShowImageClick}">
          <Image Source="{StaticResource openDrawingImage}" Classes="ToolImage"/>
        </Button>
      </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:RulerToolVM}">
      <DockPanel Margin="5, 0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="18">

        <TextBlock Margin="0, 0" Text="{Binding Length, StringFormat=Current Length: {0:F2} mm}" VerticalAlignment="Center"/>
        <CheckBox Margin="10,0,0,-1"  IsChecked="{Binding Snapping}" VerticalAlignment="Center">Snap to 5 degree increments (Toggle with Ctrl)</CheckBox>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" VerticalAlignment="Center" Margin="20, 0, 0, 0">
          <TextBlock.Text>
            <MultiBinding StringFormat="{}Dimensions: {0} mm x {1} mm">
              <Binding Path="DataContext.PhysicalLength" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Grid}"/>
              <Binding Path="DataContext.PhysicalHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Grid}"/>
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
      </DockPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ZoomToolVM}">
      <StackPanel Orientation="Horizontal" Margin="5, 0">
        <Button Margin="1, 0"  ToolTip.Tip="Zoom out" Command="{Binding ZoomOut}">
          <Image Source="{StaticResource zoom_outDrawingImage}" Classes="ToolImage"/>
        </Button>
        <Slider HorizontalAlignment="Center" Minimum="1" Maximum="6" Value="{Binding DataContext.DisplaySettingsTool.ZoomValue, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}" Margin="5,0" VerticalAlignment="Center" Width="150"/>
        <Button Margin="1, 0"  ToolTip.Tip="Zoom in" Command="{Binding ZoomIn}">
          <Image Source="{StaticResource zoom_inDrawingImage}" Classes="ToolImage"/>
        </Button>
      </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:EditingToolVM}">
      <TextBlock VerticalAlignment="Center">Coming soon!</TextBlock>
    </DataTemplate>
  </UserControl.DataTemplates>
  <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1">
    <Grid.RowDefinitions>
      <RowDefinition Height="35"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="40"/>
    </Grid.RowDefinitions>
    <Border BorderThickness="0, 0, 0, 1" BorderBrush="Gray">

      <StackPanel Orientation="Horizontal" Margin="1, 1">
        <Border BorderBrush="Black" BorderThickness="1" Width="30" Height="30">
          <Image Source="{Binding SelectedTool.Img}" Classes="ToolImage"/>
        </Border>
        <ContentControl Margin="2, 0, 0, 0" Content="{Binding SelectedTool}">
          <!--ContentTemplate="{StaticResource DisplaySettingsTemplate}"-->

        </ContentControl>

      </StackPanel>
    </Border>
    <Grid x:Name="CanGrid" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1" >
      <!--SizeChanged="Grid_SizeChanged_1"-->
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="320"/>
      </Grid.ColumnDefinitions>

      <DockPanel Margin="5, 0" Grid.Row="1" Grid.Column="2" VerticalAlignment="Stretch">
        <Button DockPanel.Dock="Top" Grid.Row="0" Margin="0, 2" Content="Clear Selection" Command="{Binding ClearSelection}"/>
        <Button DockPanel.Dock="Top" Grid.Row="1" Margin="0, 2" Content="Select stones in selected color" Command="{Binding SelectColor}" ToolTip.Tip="Select all stones in the color selected in the list below. &#x0a; If some stones are selected this function only applies to the selected stones"/>
        <parent:ColorControl Grid.Row="1" Grid.Column="2" 
                                         ClickCommand="{Binding MouseClickCommand}" 
                                         ColumnConfig="{Binding ColorColumnConfig}" 
                                         Colors="{Binding DominoList}" 
                                         SelectedColor="{Binding SelectedColor}">
                </parent:ColorControl>
      </DockPanel>
      <!--<ScrollViewer Grid.Column="1" x:Name="ScrollViewer" Margin="0,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"> SizeChanged="Grid_SizeChanged" -->
      <Grid Grid.Column="1" ColumnDefinitions="*, Auto" RowDefinitions="*, Auto">
        <ScrollBar Grid.Row="1" Orientation="Horizontal">
          
        </ScrollBar>
        <ScrollBar Grid.Column="1" Orientation="Vertical">
        </ScrollBar>
        <Border BorderBrush="Beige" BorderThickness="1">
        <parent:ProjectCanvas Project="{Binding Dominoes}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="True"
                            ShiftX="{Binding DisplaySettingsTool.HorizontalOffset}" 
                            ShiftY="{Binding DisplaySettingsTool.VerticalOffset}" 
                            Zoom="{Binding DisplaySettingsTool.ZoomValue}"
                            SelectedDominoes="{Binding SelectedDominoes}"
                            SelectedBorderColor="{Binding DisplaySettingsTool.SelectedColor}"
                            UnselectedBorderColor="{Binding DisplaySettingsTool.BorderColor}"
                            SelectionDomain="{Binding SelectionTool.CurrentSelectionDomain.SelectionShape}" 
                            SelectionDomainColor="{Binding SelectionTool.CurrentSelectionDomain.CurrentSelectionMode, Converter={StaticResource SelectionModeColorConverter}}"
                            SelectionDomainVisible="{Binding SelectionTool.CurrentSelectionDomain.SelectionPathVisible}" 
                            SourceImage="{Binding DisplaySettingsTool.FilteredImage}"
                            SourceImageOpacity="{Binding DisplaySettingsTool.ImageOpacity}"
                            SourceImageAbove="{Binding DisplaySettingsTool.Above}"
                            BackgroundColor="{Binding DisplaySettingsTool.BackgroundColor}"
                            BorderSize="{Binding DisplaySettingsTool.BorderSize}"
                            ForceRedraw="{Binding DisplaySettingsTool.ForceRedraw}"
                            AdditionalDrawables="{Binding AdditionalDrawables}"
                              x:Name="ProjectCanvas"/>
        </Border>
      </Grid>
      <!--
      </ScrollViewer>-->
      <ListBox Background="Transparent"
               BorderBrush="Transparent"
               BorderThickness="0"
               VerticalAlignment="Stretch"
               Items="{Binding EditingTools}"
               SelectedItem="{Binding SelectedTool, Mode=TwoWay}" Classes="ToolButton">
        <ListBox.ItemTemplate>
          <DataTemplate >
            <Image Classes="ToolImage" Source="{Binding Img}" ToolTip.Tip="{Binding Name}"/>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
    </Grid>

    <Grid Grid.Row="2">
      <StackPanel Grid.Row="2"  Orientation="Horizontal">
        <parent:ImageButton Image="/Icons/draw_freehand.ico" 
                            Content="Basic Settings" Command="{Binding RestoreBasicSettings}"/>
        <parent:ImageButton Image="/Icons/file_export.ico" IsVisible="{Binding VisibleFieldplan}"
                            Content="Buildtools" Command="{Binding BuildtoolsClick}"/>
        <Border VerticalAlignment="Stretch" Margin="5" BorderThickness="1, 0, 0, 0" BorderBrush="Black"></Border>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="Name: "/>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Name}"/>
        <Border VerticalAlignment="Stretch" Margin="5" BorderThickness="1, 0, 0, 0" BorderBrush="Black"></Border>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="Rows: "/>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ProjectHeight}"/>
        <Border VerticalAlignment="Stretch" Margin="5" BorderThickness="1, 0, 0, 0" BorderBrush="Black"></Border>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="Stones/Row: "/>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ProjectWidth}"/>
        <Border VerticalAlignment="Stretch" Margin="5" BorderThickness="1, 0, 0, 0" BorderBrush="Black"></Border>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="Amount: "/>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ProjectAmount}"/>
        <Border VerticalAlignment="Stretch" Margin="5" BorderThickness="1, 0, 0, 0" BorderBrush="Black"></Border>
        <TextBlock TextWrapping="Wrap" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Center">
          <TextBlock.Text>
            <MultiBinding StringFormat="{}Dimensions: {0} mm x {1} mm">
              <Binding Path="PhysicalLength"/>
              <Binding Path="PhysicalHeight"/>
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
      </StackPanel>
    </Grid>
  </Grid>
</UserControl>
